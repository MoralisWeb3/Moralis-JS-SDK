import { fetcher } from '../../../../utils/fetcher';
import { 
  {{ names.operation }} as operation, 
  {{ names.request }}, 
  {{ names.response }} 
} from '{{ names.commonUtils }}';
import { FetchParams } from '../../../types';
import useSWR from 'swr';
import Moralis from 'moralis';

export const {{ names.hook }} = (request: {{ names.request }}, fetchParams?: FetchParams) => {
  const { deserializeResponse, serializeRequest } = operation
  const { data, error, mutate, isValidating } = useSWR<{{ names.response }}>(
    ['{{ url }}', { deserializeResponse, request: serializeRequest(request, Moralis.Core) }], 
    fetcher, 
    {revalidateOnFocus: false, ...fetchParams}
  );

  return {
    data,
    error,
    refetch: async () => mutate(),
    isValidating,
  };
};
